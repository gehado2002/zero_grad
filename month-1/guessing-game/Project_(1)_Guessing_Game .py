# -*- coding: utf-8 -*-
"""Project_(1)_Guessing_Game (2).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pGwh5UN_KQipPjHJ0106U1LKFBWHblQe

<a href="https://www.zero-grad.com/">
         <img alt="Zero Grad" src="https://lh3.googleusercontent.com/oEMY-qk_B2HW_Fponz1a3u1fLfo3NpO0VFjQKnVW8fH0v93NAWala5Kgp0nN2ubiyZdEMpwhv3Ynv7bXsB0RZ28YfEd_ZlRum75OHEu0-z7XwHfcD3sin7_SORLzg1gz52MsxD3b1WbxQWX1RdR4HP3jpbJTOuCiddl92UBcQH_x-Llx7_XuZuwb9ekN9vYnKsw6U1yL2df4IVrJEDySttzab9qlHvMO7sSekgS64jPVAmATjqXqlvrwM026dhrad-7nX-hfr2uKlUGPuo9xKzVo4EhbUP1-pKBQNPNHO6P0KcReg3NxbtKmWXRyg9LPX0xO-wwXWt9GhCcPXFV_BoY5eQXabCjR3mlr9SO01VgWplas-XF4337_JOm-bVkiaQjQca_N4Gg0hy26TvIGRnHEMIPSgudYPqhMnatoN4xAC715rP82r1svC0_qadXMZHu6D40YqWnY9ZE-iujr2p1_CetxmG-uY94UATy7o-SnxuPchG4QfZkiUgRMr8xNg86bQMuBxbCS_lOyVMwfqwbt2IunlDcZ8yyN_3SJFzFHuFOOjQolgGQrytI0mP1oTwba7je0RtBtCuTck1UCMMsZvMnJhCtWgMmuLoYTkSCzxMXbz0T3L2AClDouA_3dwM7z1gdm8Gq4v06T1KWFUs1adGNH5fuj-pUHEfW4drzzXgolPH5SehqhaNsqdMttCPUzNPIIEjwfULyQi7nlP-w-qydK82mdhdmjQhrprfoGtsPckJkI1Tur60uZI7nLkES5cE3tQrGualSNArRkkU8KN4tStZ0CkmqZNkAlMbfAJSYBD7tDxhGSg922AdLevSLJMTUyg6KuHoY30r7zH1Z8fE0R8aFZL2LJl54OU_tkXEdlFlSnZTOdB-PVTj-yagpt99SetLnQIX5SS_Vxc0BNPKjUZG0oEHYbIxkbZN1O7Rg78xe-thytngS0byfuaeP2X4NYjg29FIffnn72bAUs9Ii0N2mOpABLg1uQMN4MyAa1Mbd_=w1300-h200-no?authuser=1" >
      </a>

# Guessing Game Project Description

* **`First: You ask the user to set the game level:`**
  * *(1) Easy*:
    * Limits : [1 - 10]  
    * No. of trials : 3
  * *(2) Intermediate*:
    * Limits : [1 - 100]
    * No. of trials : 7
  * *(3) Hard* :  
    * Limits : [1 - 1000]
    * No. of trials : 15

* **`Second: set the game settings according to the game level:`**
  * set the `guess` to a number within the limits using `random` module
  * set the number of trials: `n_trials`

* **`Finally: Play the game:`**
  * Ask the user to guess the number:
    * If he guessed it successfully : `print('Congratulations, you achieved it in {user_trials} trial') `
    * if he failed:
      * user_trials < n_trials: till him (Increase) or (Decrease)
      * user_trials = n_trials: `print('You Lose!')`

## Project Description

* **`First: You ask the user to set the game level:`**
  * *(1) Easy*:
    * Limits : [1 - 10]  
    * No. of trials : 3
  * *(2) Intermediate*:
    * Limits : [1 - 100]
    * No. of trials : 7
  * *(3) Hard* :  
    * Limits : [1 - 1000]
    * No. of trials : 15

* **`Second: start the game according to the game level:`**
  * set the `guess` to a number within the limits using `random` module
  * set the number of trials: `n_trials`

* **`Finally: start the game:`**
  * Ask the user to guess the number:
    * If he guessed it successfully : `print('Congratulations, you achieved it in {user_trials} trial') `
    * if he failed:
      * user_trials < n_trials: give him another trial within
      * user_trials = n_trials: `print('You Lose!')`

# Template of Solution

## Show the game levels
"""

def show_levels():
    print(  """Game Levels :\n
      (1) Easy:\n
          * Limits : [1 - 10]\n
          * No. of trials : 3\n
      (2) Intermediate*:\n
          * Limits : [1 - 100]\n
          * No. of trials : 7\n
      (3) Hard :\n
          * Limits : [1 - 1000]\n
          * No. of trials : 15\n """)

"""## Ask the user for the game level"""

def game_level_choice():
    while True :
        game_level =int(input("""Enter the game level :\n
        (1) Easy 	 (2) Intermediate 	 (3) Hard """))
        while game_level not in range (1,4):
            print("invalid")
            break
        else:
            break


    return game_level

"""## Set the game settings according to the game level:

"""

def set_game_settings(game_level):
    if game_level ==1:
        limits=range(1,11)
        n_trials=3

    elif game_level ==2:
        limits=range(1,101)
        n_trials=7

    elif game_level ==3:
        limits=range(1,1001)
        n_trials=15

    return limits, n_trials

"""## Start Playing

> Hint: to generate random number in some range:

`import random`

`num = random.randint(lower, upper)`

 or

 `num = random.choice(range(lower, upper))`
"""

import random

def start_play(limits, n_trials):
    num = random.choice(limits)
    user_trials=1

    while True:

        guess_number=int(input("I have a hidden number, guess it :  "))


        if guess_number == num :
            print(f"You got it successfully in {user_trials} trials")
            break
        elif user_trials<n_trials and guess_number < num :
            print("No, Increase!")
            user_trials+=1
        elif user_trials<n_trials and guess_number > num :
            print("No, Decrease!")
            user_trials+=1

        else :
            print("you lose")
            print(f'the hidden number is {num}')
            break

"""## Let's Play"""

def play():
    show_levels()
    game_level = game_level_choice()
    limits, n_trials = set_game_settings(game_level)
    start_play(limits, n_trials)

def play_again():
    while True :
        again=input("if you want to play again press 'a' ")
        if again =='a':
            play()
        else:
            print("good bye")
            break
    return again

play()
play_again()

